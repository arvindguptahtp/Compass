extends /site/detail

block instance
    -
        vefa
            .data({
                key: 'program',
                title: 'program',
                icon: "programs",
                primary_color: "co--programs",
                impact_theme: "thm--programs",
                impact_color: "co--programs",

                overview: 'description',
                services: 'service_categories',
                featured: 'featured_network',
                ebr: 'evidence_base',
                need: 'student_need',
                character: 'student_characteristics',
                //- assessment: 'program.assessment_available',
                //- assessment_info: 'program.assessment_info',
                //- cost: 'program.is_cost_free',
                //- cost_desc: 'program.cost_description',
                
                //- website: 'program.program_weblink',
                //- //- race_other: 'program.race_other',
                //- region_other: 'program.region_other',
                
                //- study_weblink: 'program.study_weblink',
                //- network_use: 'program.network_use',
                
            })

block premain
    div.detail-hdr(
        o-extended="row--pStart gxi--b"
    )
        include /posters/icon
            -
                vefa.data({ 
                        title: page.title.tag(),
                        icon: page.icon
                })
                .mixin({
                    element: {
                        class: `thm--texture-tint ${page.impact_color}`,
                    }
                })
        
        include /cards/ebr
            - vefa.data({ ebr: page.ebr.io() })


block detail_a
    include /cards/data-list
        -
            vefa
                .data({
                    heading: "Program Information",
                    map: [
                        ["iterator", "Tiers of Service", page.tiers_of_service.io(), "TiersOfService"],
                        ["iterator","Region", page.region.io(), "Regions"],
                        ["iterator","Setting", page.setting.io(), "Setting"],
                        ["text", "Outcomes", page.outcomes.io()],
                        ["mixin", "Associated Fees", "card_fees"],
                        ["mixin", "Assessment", "card_assessment"]
                    ],
                    style: "alternate"
                })
                .define({
                    element: {
                        "o-base": "col--pStart iso--yStart25"
                    },
                    hdr: {
                        "o-base": "pad--x25 pad--y25",
                        "o-condensed": "pad--x50"
                    },
                    hed: {
                        class: "tx--subhed--f1--100--aa"
                    },
                    bd: {
                        "o-base": ""
                    },
                    list: {
                        "o-base": "mod--balance rhy--yStart25",
                        "o-extended": "gx--i3--gxy10 mod--static rhy--yStart0"
                    },
                    data_key: {
                        class: "thm--shade40 tx--small--f3--tcU",
                        "o-base": "pad--xy25",
                        "o-condensed": "pad--xy50"
                    },
                    data_value: {
                        class: "thm--tint10 tx--f3",
                        "o-base": "col--pStart--sStart pad--xy25",
                        "o-condensed": "pad--xy50 gxs--s2"
                    },
                })

        mixin card_fees
            +if(page.is_cost_free.io())
                p Free of Cost
                +else()
                    +if(page.cost_description.io())
                        p(
                            style="word-break:word"
                        )= page.cost_description.tag("safe")
        
        mixin card_assessment
            +if(page.assessment_available.io())
                p Assessment Available
                +if(page.assessment_info.io())
                    p= page.assessment_info.tag()
                +else()
                    p N/A


block detail_b
    include /copy/card-lede
        -
            vefa
                .data({
                    heading: "Program Description",
                    copy: page.overview.io()
                })
                .mixin({
                    element: {
                        "o-extended": "gxs--s2"
                    },
                    hed: {
                        class: page.impact_color
                    }
                })

    
    include /cards/data-list
        -
            vefa
                .data({
                    heading: "Student Demographics",
                    map: [
                        ["iterator", "Grade Level", page.grade.io(), "ProgramGrades"],
                        ["iterator", "Gender", page.gender.io(), "Gender"],
                        ["iterator", "Race", page.race.io(), "Race"],
                        ["iterator", "Targeted Student Needs", page.need.io(), "StudentNeeds"],
                        ["iterator", "Unique Student Characteristics", page.character.io(), "StudentCharacteristics"]
                    ]
                })

    
    section(
        o-base="col--pStart rhy--yStart100"
    )
        include /cards/core-services
            -
                vefa
                    .data({
                        heading: "CIS Core Services",
                        services: page.services.io()
                    })

        include /cards/link-list
            -
                vefa
                    .data({
                        heading: "Program Associations",
                        links: [
                            //- ["Test Link", "http://communities.org", "external_link"],
                            ["National Partner", page.national_partner.io()],
                            ["Featured Network", page.featured.io()],
                        ], 
                        as_internal: ["National Partner", "Featured Network"],
                        as_group: ["National Partner", "Featured Network"],
                    })

        include /cards/link-list
            -
                vefa
                    .data({
                        heading: "Additional Resources",
                        links: [
                            ["National Database", page.national_databases.io()],
                            ["Resource", page.related_resources.io()],
                            ["", page.additional_resources.io()],
                        ], 
                        as_external: ["National Database", "Resource", ""],
                        as_group: ["National Database", "Resource", ""],
                    })
