extends /page_types/detail

block instance
    -
        vefa
            .data({
                key: 'program',
                title: 'program',
                icon: "programs",
                primary_color: "co--programs",
                impact_theme: "thm--programs",
                impact_color: "co--programs",

                overview: 'description',
                services: 'service_categories',
                featured: 'featured_network',
                ebr: 'evidence_base',
                need: 'student_need',
                character: 'student_characteristics',
                assessment: 'program.assessment_available',
                assessment_info: 'program.assessment_info',
                cost: 'program.is_cost_free',
                cost_desc: 'program.cost_description',
                
                website: 'program.program_weblink',
                //- race_other: 'program.race_other',
                region_other: 'program.region_other',
                
                study_weblink: 'program.study_weblink',
                network_use: 'program.network_use',
                
            })

block premain
    div.detail-hdr(
        o-extended="row--pStart gxi--b"
    )
        include /posters/icon
            -
                vefa
                    .data(
                        { 
                            title: page.title.tag(),
                            icon: page.icon
                        }
                    )
                    .mixin({
                        element: {
                            class: `thm--texture-tint ${page.impact_color}`,

                        }
                    })
        
        include /cards/ebr
            - vefa.data({ ebr: page.ebr.io() })


block content
    .strata--detail.gx--profile(
        o-base="mod--balance"
    )
        section.gxi--a(
            class=page.impact_theme
            o-standard="pad--yStart100 pad--x25"
        )   
            include /cards/data-list
                -
                    vefa
                        .data({
                            heading: "Program Information",
                            map: [
                                ["Tiers of Service", page.tiers_of_service.io(), "TiersOfService"],
                                ["Region", page.region.io(), "Regions"],
                                ["Setting", page.setting.io(), "Setting"],
                                ["Outcomes", page.outcomes.io()],
                            ],
                            as_text: ["Outcomes"],
                            style: "alternate"
                        })
                        .define({
                            element: {
                                "o-base": "col--pStart iso--yStart25"
                            },
                            hdr: {
                                "o-base": "pad--x25 pad--y25",
                                "o-condensed": "pad--x50"
                            },
                            hed: {
                                class: "tx--subhed--f1--100--aa"
                            },
                            bd: {
                                "o-base": ""
                            },
                            list: {
                                "o-base": "mod--balance rhy--yStart25",
                                "o-extended": "gx--i3--gxy10 mod--static rhy--yStart0"
                            },
                            data_key: {
                                class: "thm--shade40 tx--small--f3--tcU",
                                "o-base": "pad--xy25",
                                "o-condensed": "pad--xy50"
                            },
                            data_value: {
                                class: "thm--tint10 tx--f3",
                                "o-base": "col--pStart--sStart pad--xy25",
                                "o-condensed": "pad--xy50 gxs--s2"
                            },
                        })

                mixin card_list
                    dt&attributes(card.data_key) Associated Fees
                    +if(page.is_cost_free.io())
                        dt&attributes(card.data_value) Free of Cost
                        +else()
                            dt&attributes(card.data_value)
                                +if(page.cost_description.io())
                                    p(
                                        style="word-break:word"
                                    )= page.cost_description.tag("safe")
                    
                    +if(page.get("assessment"))
                        dt&attributes(card.data_key) Assessment Available
                        dt&attributes(card.data_value)
       
        
        section.gxi--b(
            o-base="col--pStart pad--yEnd50 rhy--yStart50"
            o-condensed="pad--xy100"
            o-extended="gx--i2--gxy100 rhy--yStart0"
        )
            //- -
            //-     card_style = {
            //-         hdr: {
            //-             class: "thm--programs",
            //-             "o-base": "mod--static pad--x50 pad--y25"
            //-         },
            //-         hed: {
            //-             class: "tx--maj--f1--100"
            //-         },
            //-         bd: {
            //-             class: "thm--shade15",
            //-             "o-base": "mod--balance pad--xy25 rhy--yStart25",
            //-             "o-extended": "gx--i3--gxy10 mod--static rhy--yStart0"
            //-         },
            //-         key: {
            //-             class: `thm--programs tx--small--f3--tcU`,
            //-             "o-base": "pad--xy25",
            //-             "o-condensed": "pad--xy50"
            //-         },
            //-         value: {
            //-             class: `thm--tint70 co--programs tx--f3`,
            //-             "o-base": "col--pStart--sStart pad--xy25",
            //-             "o-condensed": "pad--xy50 gxs--s2"
            //-         },
            //-     }

            include /copy/card-lede
                -
                    vefa
                        .data({
                            heading: "Program Description",
                            copy: page.overview.io()
                        })
                        .mixin({
                            element: {
                                class: "thm--shade5",
                                "o-extended": "gxs--s2"
                            },
                            hed: {
                                class: page.impact_color
                            }
                        })

            include /cards/data-list
                -
                    vefa
                        .data({
                            heading: "Student Demographics",
                            map: [
                                ["Grade Level", page.grade.io(), "PartnerGrades"],
                                ["Gender", page.gender.io(), "Gender"],
                                ["Race", page.race.io(), "Race"],
                                ["Student Need", page.need.io(), "StudentNeeds"],
                                ["Student Characteristics", page.character.io(), "StudentCharacteristics"]
                            ]

                        })

            section(
                o-base="col--pStart rhy--yStart100"
            )
                include /cards/core-services
                    -
                        vefa
                            .data({
                                heading: "CIS Core Services",
                                services: page.services.io()
                            })
                
                include /cards/link-list
                    -
                        vefa
                            .data({
                                heading: "Program Associations",
                                links: [
                                    //- ["Test Link", "http://communities.org", "external_link"],
                                    ["National Partner", page.national_partner.io()],
                                    ["Featured Network", page.featured.io()],
                                ], 
                                as_internal: ["National Partner", "Featured Network"],
                                as_group: ["National Partner", "Featured Network"],
                            })

                include /cards/link-list
                    -
                        vefa
                            .data({
                                heading: "Additional Resources",
                                links: [
                                    ["National Database", page.national_databases.io()],
                                    ["Resource", page.related_resources.io()],
                                    ["", page.additional_resources.io()],
                                ], 
                                as_external: ["National Database", "Resource", ""],
                                as_group: ["National Database", "Resource", ""],
                            })
