include /_vefa
//-------------------
//- BLOCKS:
//-     model
//-     view
//-     prev_active
//-     prev_inactive
//-     next_active
//-     next_inactive
//-     pages
//-     current_active
//-     page
//-     spanner
//-------------------   

-
    pagination = pagination || new Vefa()

    pagination
        .define({
            element: {
                class: "tx--f1--aa",
                "o-base": "row--pStart--sMiddle",
            },
            group: {
                "o-base": "row--pMiddle--sMiddle mod--balance rhy--xStart10 ord--next"
            },
            ctrl: {
                class: "thm--dark rxn--tint30 fx--shift",
                "o-base": "row--pMiddle--sMiddle--xAuto mod--static pad--x25 pad--y10 rhy--xStart25 ico--xs"
            },

            data: {
                obj: 'abstract',
                page: 'page'
            },
            
            labels: {
                prev: 'Previous',
                next: 'Next'
            },

            has_previous () {
                return `${ this.data.obj }.has_previous`
            },

            has_next () {
                return `${ this.data.obj }.has_next`
            },

            prev_q () {
                let query = `${ this.data.obj }.previous_page_number.querystring`
                return `?${ v( query ) }`
            },

            next_q () {
                let query = `${ this.data.obj }.next_page_number.querystring`
                return `?${ v( query ) }`
            },

            page_q () {
                let query = `${ this.data.page }.querystring`
                return `?${ v(query) }`
            },

            pages () {
                return `${ this.data.obj }.pages`
            },

            current () {
                return `${ this.data.page } == ${ this.data.obj }.number`
            },

            page_loop () {
                return `${ this.data.page } in ${ this.data.obj }.pages`
            }
        })

block model
- pagination = pagination.$freeze()

block view
    +if(pagination.pages())
        nav.pagination&attributes(pagination.element)
            +if(pagination.has_previous())
                block prev_active
                    a.page-ctrl--prev.ord--start(
                        href=pagination.prev_q()
                    )&attributes(pagination.ctrl)
                        include /icons/ctrl-prev
                        span= pagination.labels.prev
                
                +else()
                    block prev_inactive
                        div.page-ctrl--prev.ord--start.is-disabled()&attributes(pagination.ctrl)
                            include /icons/ctrl-prev
                            span= pagination.labels.prev
            
            
            +if(pagination.has_next())
                block next_active
                    a.page-ctrl--next.ord--end(
                        href=pagination.next_q()
                    )&attributes(pagination.ctrl)
                        span= pagination.labels.next
                        include /icons/ctrl-next
                
                +else()
                    block next_inactive
                        div.page-ctrl--next.ord--end.is-disabled()&attributes(pagination.ctrl)
                            span= pagination.labels.next
                            include /icons/ctrl-next
            
            +if(pagination.pages())
                block pages
                    div&attributes(pagination.group)
                        +for(pagination.page_loop())
                            +if(pagination.data.page)
                                +if(pagination.current())
                                    block current_active
                                        div.page-ctrl--current.is-current&attributes(pagination.ctrl)
                                            span= v(pagination.data.page)
                                    
                                    +else()
                                        block page
                                            a.page-ctrl(
                                                href=pagination.page_q()
                                            )&attributes(pagination.ctrl)
                                                span= v(pagination.data.page)
                                
                                +else()
                                    block spanner
                                        span.page-ctrl--pseudo() ...
                
            

- pagination = pagination.$thaw()
